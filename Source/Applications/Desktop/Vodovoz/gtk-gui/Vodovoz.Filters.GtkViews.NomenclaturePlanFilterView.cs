
// This file has been generated by the GUI designer. Do not modify.
namespace Vodovoz.Filters.GtkViews
{
	public partial class NomenclaturePlanFilterView
	{
		private global::Gtk.Table table1;

		private global::Gamma.GtkWidgets.yCheckButton chkOnlyDisposableTare;

		private global::Gamma.GtkWidgets.yCheckButton chkShowArchive;

		private global::Gamma.GtkWidgets.yCheckButton chkShowDilers;

		private global::Gtk.Label labelType;

		private global::QS.Widgets.GtkUI.SpecialListComboBox lstCategory;

		private global::QS.Widgets.GtkUI.SpecialListComboBox lstSaleCategory;

		private global::Gamma.GtkWidgets.yCheckButton ychkOnlyPlanned;

		protected virtual void Build()
		{
			global::Stetic.Gui.Initialize(this);
			// Widget Vodovoz.Filters.GtkViews.NomenclaturePlanFilterView
			global::Stetic.BinContainer.Attach(this);
			this.Name = "Vodovoz.Filters.GtkViews.NomenclaturePlanFilterView";
			// Container child Vodovoz.Filters.GtkViews.NomenclaturePlanFilterView.Gtk.Container+ContainerChild
			this.table1 = new global::Gtk.Table(((uint)(1)), ((uint)(7)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			// Container child table1.Gtk.Table+TableChild
			this.chkOnlyDisposableTare = new global::Gamma.GtkWidgets.yCheckButton();
			this.chkOnlyDisposableTare.CanFocus = true;
			this.chkOnlyDisposableTare.Name = "chkOnlyDisposableTare";
			this.chkOnlyDisposableTare.Label = global::Mono.Unix.Catalog.GetString("Одноразовая тара");
			this.chkOnlyDisposableTare.DrawIndicator = true;
			this.chkOnlyDisposableTare.UseUnderline = true;
			this.table1.Add(this.chkOnlyDisposableTare);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.table1[this.chkOnlyDisposableTare]));
			w1.LeftAttach = ((uint)(4));
			w1.RightAttach = ((uint)(5));
			w1.XOptions = ((global::Gtk.AttachOptions)(4));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.chkShowArchive = new global::Gamma.GtkWidgets.yCheckButton();
			this.chkShowArchive.CanFocus = true;
			this.chkShowArchive.Name = "chkShowArchive";
			this.chkShowArchive.Label = global::Mono.Unix.Catalog.GetString("Показать архивные");
			this.chkShowArchive.DrawIndicator = true;
			this.chkShowArchive.UseUnderline = true;
			this.table1.Add(this.chkShowArchive);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table1[this.chkShowArchive]));
			w2.LeftAttach = ((uint)(5));
			w2.RightAttach = ((uint)(6));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.chkShowDilers = new global::Gamma.GtkWidgets.yCheckButton();
			this.chkShowDilers.CanFocus = true;
			this.chkShowDilers.Name = "chkShowDilers";
			this.chkShowDilers.Label = global::Mono.Unix.Catalog.GetString("Показывать дилеры");
			this.chkShowDilers.DrawIndicator = true;
			this.chkShowDilers.UseUnderline = true;
			this.table1.Add(this.chkShowDilers);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.table1[this.chkShowDilers]));
			w3.LeftAttach = ((uint)(3));
			w3.RightAttach = ((uint)(4));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.labelType = new global::Gtk.Label();
			this.labelType.Name = "labelType";
			this.labelType.LabelProp = global::Mono.Unix.Catalog.GetString("Категория");
			this.table1.Add(this.labelType);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.table1[this.labelType]));
			w4.XOptions = ((global::Gtk.AttachOptions)(4));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.lstCategory = new global::QS.Widgets.GtkUI.SpecialListComboBox();
			this.lstCategory.Name = "lstCategory";
			this.lstCategory.AddIfNotExist = false;
			this.lstCategory.DefaultFirst = false;
			this.lstCategory.ShowSpecialStateAll = true;
			this.lstCategory.ShowSpecialStateNot = false;
			this.table1.Add(this.lstCategory);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.table1[this.lstCategory]));
			w5.LeftAttach = ((uint)(1));
			w5.RightAttach = ((uint)(2));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.lstSaleCategory = new global::QS.Widgets.GtkUI.SpecialListComboBox();
			this.lstSaleCategory.Name = "lstSaleCategory";
			this.lstSaleCategory.AddIfNotExist = false;
			this.lstSaleCategory.DefaultFirst = false;
			this.lstSaleCategory.ShowSpecialStateAll = true;
			this.lstSaleCategory.ShowSpecialStateNot = false;
			this.table1.Add(this.lstSaleCategory);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.table1[this.lstSaleCategory]));
			w6.LeftAttach = ((uint)(2));
			w6.RightAttach = ((uint)(3));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.ychkOnlyPlanned = new global::Gamma.GtkWidgets.yCheckButton();
			this.ychkOnlyPlanned.CanFocus = true;
			this.ychkOnlyPlanned.Name = "ychkOnlyPlanned";
			this.ychkOnlyPlanned.Label = global::Mono.Unix.Catalog.GetString("Только с планом");
			this.ychkOnlyPlanned.DrawIndicator = true;
			this.ychkOnlyPlanned.UseUnderline = true;
			this.table1.Add(this.ychkOnlyPlanned);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.table1[this.ychkOnlyPlanned]));
			w7.LeftAttach = ((uint)(6));
			w7.RightAttach = ((uint)(7));
			w7.XOptions = ((global::Gtk.AttachOptions)(4));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			this.Add(this.table1);
			if ((this.Child != null))
			{
				this.Child.ShowAll();
			}
			this.Show();
		}
	}
}
